apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/instance: {{ .Chart.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/version: {{ .Chart.AppVersion }}
      app.kubernetes.io/name: {{ .Release.Name }}
      app.kubernetes.io/instance: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/instance: {{ .Chart.Name }}
        cheetah.o7.studio/app: minecraft
        cheetah.o7.studio/fallback: "true"
    spec:
      serviceAccountName: cheetah-account
      containers:
        - name: ctest
          image: ctest:latest
          imagePullPolicy: "Never"
          env:
            - name: "OCTOPUS_HOST"
              value: "octopus"
            - name: "OCTOPUS_PORT"
              value: "50051"
            - name: "OCTOPUS_CLIENT_CERT"
              valueFrom:
                secretKeyRef:
                  name: "octopus-client-cert"
                  key: client.crt
            - name: "OCTOPUS_CLIENT_KEY"
              valueFrom:
                secretKeyRef:
                  name: "octopus-client-cert"
                  key: client.key
            - name: "OCTOPUS_CA_CERT"
              valueFrom:
                secretKeyRef:
                  name: "octopus-ca-cert"
                  key: ca.crt
          volumeMounts:
            - name: floodgate
              mountPath: /paper/plugins/floodgate/key.pem
              subPath: key.pem
              readOnly: true
          ports:
            - containerPort: 25565
              name: minecraft
      volumes:
        - name: floodgate
          secret:
            secretName: cheetah-floodgate