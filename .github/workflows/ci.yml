name: "⚙️ CI & Release Workflow"
on:
  push:
  pull_request:
    types: [ opened, reopened ]

env:
  JAVA_VERSION: '23'
  JAVA_DISTRIBUTION: 'temurin'

permissions:
  contents: write
  packages: write

jobs:
  lint:
    name: "🧹 Lint Code"
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout Code (Full History)"
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: "☕ Setup Java ${{ env.JAVA_VERSION }}"
        uses: actions/setup-java@v5
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: "⚡ Setup Gradle with Cache"
        uses: gradle/actions/setup-gradle@v4

      - name: "🔍 Run Check"
        run: ./gradlew check

  test:
    name: "✅ Run Tests"
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: "📥 Checkout Code (Full History)"
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: "☕ Setup Java ${{ env.JAVA_VERSION }}"
        uses: actions/setup-java@v5
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: "⚡ Setup Gradle with Cache"
        uses: gradle/actions/setup-gradle@v4

      - name: "🧪 Run Unit Tests"
        run: ./gradlew test

  releaser:
    name: "🏁 Release"
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout Code (Full History)"
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: "☕ Setup Java ${{ env.JAVA_VERSION }}"
        uses: actions/setup-java@v5
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: "⚡ Setup Gradle with Cache"
        uses: gradle/actions/setup-gradle@v4

      - name: "🚀 Publish to Maven Central"
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: |
          RAW_TAG="${GITHUB_REF##*/}"
          VERSION="${RAW_TAG#v}"

          [[ "$VERSION" =~ ^[0-9]+(\.[0-9]+)*$ ]] || exit -1
          ./gradlew :api:publishToCentralPortal -Pversion="$VERSION"

      - name: "📦 Build all shadowJARs"
        run: ./gradlew clean shadowJar

      - name: "🚀 Create GitHub Release"
        uses: softprops/action-gh-release@v2
        with:
          files: |
            plugin/build/libs/*.jar
          generate_release_notes: true